{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","key","setKey","keyCode","setKeyCode","eventCode","setEventCode","location","setLocation","clicked","setClicked","onWhileClicked","display","offWhileClicked","copyMessage","setCopyMessage","boxVariants","hover","y","transition","duration","type","click","scale","className","onKeyDown","e","code","console","log","tabIndex","div","style","variants","hidden","opacity","visible","initial","animate","h1","whileTap","onClick","navigator","clipboard","writeText","whileHover","delay","a","href","target","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAsOeA,MAhOf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACJC,EADI,KACCC,EADD,OAEmBF,mBAAS,MAF5B,mBAEJG,EAFI,KAEKC,EAFL,OAGuBJ,mBAAS,MAHhC,mBAGJK,EAHI,KAGOC,EAHP,OAIqBN,mBAAS,MAJ9B,mBAIJO,EAJI,KAIMC,EAJN,OAKmBR,oBAAS,GAL5B,mBAKJS,EALI,KAKKC,EALL,KAMLC,EAAiB,CACnBC,QAASH,EAAU,OAAS,QAE1BI,EAAkB,CACpBD,QAASH,EAAU,OAAS,QAVrB,EAY2BT,mBAAS,iBAZpC,mBAYJc,EAZI,KAYSC,EAZT,KA6BLC,EAAc,CAChBC,MAAO,CACHC,GAAI,GACJC,WAAY,CACRC,SAAU,EACVC,KAAM,WAGdC,MAAO,CACHC,MAAO,IACPJ,WAAY,CACRC,SAAU,EACVC,KAAM,YAqFlB,OACI,sBAAKG,UAAU,MAAMC,UAjCzB,SAAoBC,IACA,IAAZjB,GACAC,GAAW,GAGfR,EAAOwB,EAAEzB,KACTG,EAAWsB,EAAEvB,SACbG,EAAaoB,EAAEC,MACfnB,EAAYkB,EAAEnB,UAEdqB,QAAQC,IAAIH,IAuBgCI,SAAS,IAArD,UACI,eAAC,IAAOC,IAAR,CACIP,UAAU,gBACVQ,MAAOnB,EACPoB,SArHa,CACrBC,OAAQ,CACJC,QAAS,EACTjB,GAAI,KAERkB,QAAS,CACLD,QAAS,EACTjB,EAAG,EACHC,WAAY,CACRC,SAAU,EACVC,KAAM,YA4GNgB,QAAQ,SACRC,QAAQ,UALZ,UAOI,qBAAKd,UAAU,qBACf,qBAAKA,UAAU,sBAAf,SACI,oBAAIA,UAAU,YAAd,sEAMR,cAAC,IAAOe,GAAR,CACIf,UAAU,qBACVQ,MAAOrB,EACPsB,SArGU,CAClBX,MAAO,CACHC,MAAO,IACPJ,WAAY,CACRC,SAAU,EACVC,KAAM,YAiGNmB,SAAS,QACTC,QAzCZ,WACIC,UAAUC,UAAUC,UAAUvC,GAC9BU,EAAe,2BAAD,OAA4BV,KAkCtC,SAOKA,IAGL,sBAAKmB,UAAU,gBAAgBQ,MAAOrB,EAAtC,UACI,eAAC,IAAOoB,IAAR,CACIP,UAAU,MACVS,SAAUjB,EACV6B,WAAW,QACXL,SAAS,QACTC,QA/ChB,WACIC,UAAUC,UAAUC,UAAU3C,GAC9Bc,EAAe,qBAAD,OAAsBd,KAwC5B,UAOI,qBAAKuB,UAAU,sBAAf,SACI,oBAAIA,UAAU,YAAd,yBAEJ,qBAAKA,UAAU,oBAAf,SACI,qBAAIA,UAAU,eAAd,cAA+BvB,EAA/B,YAIR,eAAC,IAAO8B,IAAR,CACIP,UAAU,MACVS,SAAUjB,EACV6B,WAAW,QACXL,SAAS,QACTC,QAzDhB,WACIC,UAAUC,UAAUC,UAAUzC,GAC9BY,EAAe,yBAAD,OAA0BZ,KAkDhC,UAOI,qBAAKqB,UAAU,sBAAf,SACI,oBAAIA,UAAU,YAAd,6BAEJ,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,eAAd,SAA8BrB,SAItC,eAAC,IAAO4B,IAAR,CACIP,UAAU,MACVS,SAAUjB,EACV6B,WAAW,QACXL,SAAS,QACTC,QApEhB,WACIC,UAAUC,UAAUC,UAAUrC,GAC9BQ,EAAe,0BAAD,OAA2BR,KA6DjC,UAOI,qBAAKiB,UAAU,sBAAf,SACI,oBAAIA,UAAU,YAAd,8BAEJ,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,eAAd,SAA8BjB,YAK1C,oBAAIiB,UAAU,eAAeQ,MAAOrB,EAApC,SACKG,IAGL,cAAC,IAAOiB,IAAR,CACIP,UAAU,SACVS,SAxJW,CACnBC,OAAQ,CACJC,QAAS,EACTjB,EAAG,OAEPkB,QAAS,CACLD,QAAS,EACTjB,EAAG,EACHC,WAAY,CACRC,SAAU,EACV0B,MAAO,GACPzB,KAAM,YA8INgB,QAAQ,SACRC,QAAQ,UAJZ,SAMI,cAAC,IAAOS,EAAR,CACIvB,UAAU,UACVwB,KAAK,4CACLC,OAAO,SACPhB,SAjJQ,CACpBC,OAAQ,CACJC,QAAS,EACTjB,EAAG,KAEPkB,QAAS,CACLD,QAAS,EACTjB,EAAG,EACHC,WAAY,CACRC,SAAU,EACV0B,MAAO,IAGf7B,MAAO,CACHiC,MAAO,CACH,UACA,UACA,UACA,UACA,UACA,aA8HIL,WAAW,QALf,uCC5MDM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe91ca10.chunk.js","sourcesContent":["import react, { useState } from 'react';\nimport { motion } from 'framer-motion';\n\n//files\nimport './App.css';\n\nfunction App() {\n    const [key, setKey] = useState(null);\n    const [keyCode, setKeyCode] = useState(null);\n    const [eventCode, setEventCode] = useState(null);\n    const [location, setLocation] = useState(null);\n    const [clicked, setClicked] = useState(false);\n    const onWhileClicked = {\n        display: clicked ? 'flex' : 'none',\n    };\n    const offWhileClicked = {\n        display: clicked ? 'none' : 'flex',\n    };\n    const [copyMessage, setCopyMessage] = useState('Click to Copy');\n\n    const clickBoxVariants = {\n        hidden: {\n            opacity: 0,\n            y: -100,\n        },\n        visible: {\n            opacity: 1,\n            y: 0,\n            transition: {\n                duration: 2,\n                type: 'spring',\n            },\n        },\n    };\n\n    const boxVariants = {\n        hover: {\n            y: -20,\n            transition: {\n                duration: 1,\n                type: 'spring',\n            },\n        },\n        click: {\n            scale: 1.1,\n            transition: {\n                duration: 1,\n                type: 'spring',\n            },\n        },\n    };\n    const titleVariants = {\n        click: {\n            scale: 1.1,\n            transition: {\n                duration: 1,\n                type: 'spring',\n            },\n        },\n    };\n    const footerVariants = {\n        hidden: {\n            opacity: 0,\n            y: '3vw',\n        },\n        visible: {\n            opacity: 1,\n            y: 0,\n            transition: {\n                duration: 2,\n                delay: 0.5,\n                type: 'spring',\n            },\n        },\n    };\n    const mentionVariants = {\n        hidden: {\n            opacity: 0,\n            y: 100,\n        },\n        visible: {\n            opacity: 1,\n            y: 0,\n            transition: {\n                duration: 2,\n                delay: 1,\n            },\n        },\n        hover: {\n            color: [\n                '#AAAAA6',\n                '#BE74D4',\n                '#5FA9E7',\n                '#98C379',\n                '#CF9965',\n                '#E06C75',\n            ],\n        },\n    };\n\n    function getKeyInfo(e) {\n        if (clicked === false) {\n            setClicked(true);\n        }\n\n        setKey(e.key);\n        setKeyCode(e.keyCode);\n        setEventCode(e.code);\n        setLocation(e.location);\n\n        console.log(e);\n    }\n\n    function copyEventCode() {\n        navigator.clipboard.writeText(eventCode);\n        setCopyMessage(`Copied event.eventCode: ${eventCode}`);\n    }\n\n    function copyKey() {\n        navigator.clipboard.writeText(key);\n        setCopyMessage(`Copied event.key: ${key}`);\n    }\n\n    function copyKeyCode() {\n        navigator.clipboard.writeText(keyCode);\n        setCopyMessage(`Copied event.keyCode: ${keyCode}`);\n    }\n    function copyLocation() {\n        navigator.clipboard.writeText(location);\n        setCopyMessage(`Copied event.location: ${location}`);\n    }\n\n    return (\n        <div className=\"App\" onKeyDown={getKeyInfo} tabIndex=\"0\">\n            <motion.div\n                className=\"click-key-box\"\n                style={offWhileClicked}\n                variants={clickBoxVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n            >\n                <div className=\"click-key-header\"></div>\n                <div className=\"click-key-container\">\n                    <h1 className=\"click-key\">\n                        Press any key to get the JavaScript key information\n                    </h1>\n                </div>\n            </motion.div>\n\n            <motion.h1\n                className=\"keycode-event-code\"\n                style={onWhileClicked}\n                variants={titleVariants}\n                whileTap=\"click\"\n                onClick={copyEventCode}\n            >\n                {eventCode}\n            </motion.h1>\n\n            <div className=\"box-container\" style={onWhileClicked}>\n                <motion.div\n                    className=\"box\"\n                    variants={boxVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"click\"\n                    onClick={copyKey}\n                >\n                    <div className=\"box-title-container\">\n                        <h1 className=\"box-title\">event.key</h1>\n                    </div>\n                    <div className=\"keycode-container\">\n                        <h1 className=\"keycode-name\">\"{key}\"</h1>\n                    </div>\n                </motion.div>\n\n                <motion.div\n                    className=\"box\"\n                    variants={boxVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"click\"\n                    onClick={copyKeyCode}\n                >\n                    <div className=\"box-title-container\">\n                        <h1 className=\"box-title\">event.keyCode</h1>\n                    </div>\n                    <div className=\"keycode-container\">\n                        <h1 className=\"keycode-name\">{keyCode}</h1>\n                    </div>\n                </motion.div>\n\n                <motion.div\n                    className=\"box\"\n                    variants={boxVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"click\"\n                    onClick={copyLocation}\n                >\n                    <div className=\"box-title-container\">\n                        <h1 className=\"box-title\">event.location</h1>\n                    </div>\n                    <div className=\"keycode-container\">\n                        <h1 className=\"keycode-name\">{location}</h1>\n                    </div>\n                </motion.div>\n            </div>\n\n            <h1 className=\"copy-message\" style={onWhileClicked}>\n                {copyMessage}\n            </h1>\n\n            <motion.div\n                className=\"footer\"\n                variants={footerVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n            >\n                <motion.a\n                    className=\"mention\"\n                    href=\"https://itaihammer.github.io/Social-Page/\"\n                    target=\"_blank\"\n                    variants={mentionVariants}\n                    whileHover=\"hover\"\n                >\n                    Made By Itai Hammer\n                </motion.a>\n            </motion.div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}